CREATE TABLE users (
    user_id VARCHAR PRIMARY KEY NOT NULL,
    hashed_password VARCHAR NOT NULL,
    wallet_number VARCHAR NOT NULL,
    wallet_address VARCHAR NOT NULL
);

CREATE TABLE user_sensors (
    sensor_id VARCHAR PRIMARY KEY NOT NULL,
    owner_id VARCHAR NOT NULL,
    FOREIGN KEY (owner_id) REFERENCES users(user_id)
);

CREATE TABLE sensor_data (
    sensor_id VARCHAR PRIMARY KEY NOT NULL,
    drop_alerts INTEGER NOT NULL,
    overtemp_alerts INTEGER NOT NULL,
    water_events INTEGER NOT NULL,
    FOREIGN KEY (sensor_id) REFERENCES user_sensors(sensor_id)
);

-- Create the 'contracts' table
CREATE TABLE contracts (
    contract_id SERIAL PRIMARY KEY NOT NULL,
    proposer_id VARCHAR NOT NULL,
    courier_id VARCHAR,
    contract_award_time TIMESTAMP,
    contract_completion_time TIMESTAMP,
    -- contract_status can be OPEN, FULFILLMENT, COMPLETED, or FAILED
    contract_status VARCHAR NOT NULL,
    required_collateral REAL NOT NULL,
    base_price REAL NOT NULL,
    t1_bonus REAL NOT NULL,
    t2_bonus REAL NOT NULL,
    base_lock VARCHAR NOT NULL,
    t1_lock VARCHAR NOT NULL,
    t2_lock VARCHAR NOT NULL,
    collateral_lock VARCHAR NOT NULL,
    base_key VARCHAR NOT NULL,
    t1_key VARCHAR NOT NULL,
    t2_key VARCHAR NOT NULL,
    collateral_key VARCHAR NOT NULL,
    origin VARCHAR NOT NULL,
    destination VARCHAR NOT NULL,
    contract_timeout TIMESTAMP,
    sensor_id VARCHAR,
    FOREIGN KEY (proposer_id) REFERENCES users(user_id),
    FOREIGN KEY (courier_id) REFERENCES users(user_id),
    FOREIGN KEY (sensor_id) REFERENCES user_sensors(sensor_id)
);
